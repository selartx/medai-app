"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/ai";
exports.ids = ["pages/api/ai"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fai&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cai.ts&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fai&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cai.ts&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_ai_ts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./src\\pages\\api\\ai.ts */ \"(api-node)/./src/pages/api/ai.ts\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_pages_api_ai_ts__WEBPACK_IMPORTED_MODULE_4__]);\n_src_pages_api_ai_ts__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_src_pages_api_ai_ts__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_src_pages_api_ai_ts__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/ai\",\n        pathname: \"/api/ai\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _src_pages_api_ai_ts__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/ai\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest, routerServerContext } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: [],\n                multiZoneDraftMode: Boolean(false),\n                trustHostHeader: false,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/ai\",\n                internalRevalidate: routerServerContext == null ? void 0 : routerServerContext.revalidate,\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fai&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cai.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./src/pages/api/ai.ts":
/*!*****************************!*\
  !*** ./src/pages/api/ai.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_aiHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/aiHelper */ \"(api-node)/./src/utils/aiHelper.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_utils_aiHelper__WEBPACK_IMPORTED_MODULE_0__]);\n_utils_aiHelper__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst handler = async (req, res)=>{\n    if (req.method === 'POST') {\n        const { input, conversationHistory } = req.body;\n        // Debug logging\n        console.log('API Key available:', !!\"AIzaSyD1I3tbuIVdv20h7IMmU8JWA7-YR0Ce1xs\");\n        console.log('API Key length:', \"AIzaSyD1I3tbuIVdv20h7IMmU8JWA7-YR0Ce1xs\"?.length || 0);\n        console.log('Input received:', input);\n        console.log('Conversation history length:', conversationHistory?.length || 0);\n        // Validate input\n        if (!input || !(0,_utils_aiHelper__WEBPACK_IMPORTED_MODULE_0__.validateInput)(input)) {\n            return res.status(400).json({\n                error: 'Invalid input. Please provide a valid question (1-1000 characters).'\n            });\n        }\n        // Build conversation history including the new user message\n        const messages = conversationHistory || [];\n        messages.push({\n            role: 'user',\n            content: input\n        });\n        try {\n            const aiResponse = await (0,_utils_aiHelper__WEBPACK_IMPORTED_MODULE_0__.generateResponse)(messages);\n            console.log('AI Response generated successfully');\n            res.status(200).json({\n                success: true,\n                response: aiResponse\n            });\n        } catch (error) {\n            console.error('AI API error:', error);\n            console.error('Error details:', {\n                message: error instanceof Error ? error.message : String(error),\n                stack: error instanceof Error ? error.stack : undefined,\n                name: error instanceof Error ? error.name : 'Unknown'\n            });\n            // Provide specific error messages based on error type\n            let errorMessage = 'Sorry, I encountered an error. Please try again.';\n            if (error instanceof Error) {\n                if (error.message.includes('overloaded') || error.message.includes('temporarily overloaded')) {\n                    errorMessage = 'I\\'m experiencing high demand right now. Please wait a moment and try again.';\n                } else if (error.message.includes('API key')) {\n                    errorMessage = 'There\\'s an issue with the AI service configuration. Please contact support.';\n                } else if (error.message.includes('network') || error.message.includes('fetch')) {\n                    errorMessage = 'I\\'m having trouble connecting to the AI service. Please check your internet connection and try again.';\n                }\n            }\n            res.status(500).json({\n                success: false,\n                error: errorMessage,\n                retry: error instanceof Error && error.message.includes('overloaded')\n            });\n        }\n    } else {\n        res.setHeader('Allow', [\n            'POST'\n        ]);\n        res.status(405).json({\n            error: `Method ${req.method} Not Allowed`\n        });\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (handler);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3NyYy9wYWdlcy9hcGkvYWkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFDb0Y7QUFFcEYsTUFBTUUsVUFBVSxPQUFPQyxLQUFxQkM7SUFDeEMsSUFBSUQsSUFBSUUsTUFBTSxLQUFLLFFBQVE7UUFDdkIsTUFBTSxFQUFFQyxLQUFLLEVBQUVDLG1CQUFtQixFQUFFLEdBQUdKLElBQUlLLElBQUk7UUFFL0MsZ0JBQWdCO1FBQ2hCQyxRQUFRQyxHQUFHLENBQUMsc0JBQXNCLENBQUMsQ0FBQ0MseUNBQTBCO1FBQzlERixRQUFRQyxHQUFHLENBQUMsbUJBQW1CQyx5Q0FBMEIsRUFBRUcsVUFBVTtRQUNyRUwsUUFBUUMsR0FBRyxDQUFDLG1CQUFtQko7UUFDL0JHLFFBQVFDLEdBQUcsQ0FBQyxnQ0FBZ0NILHFCQUFxQk8sVUFBVTtRQUUzRSxpQkFBaUI7UUFDakIsSUFBSSxDQUFDUixTQUFTLENBQUNMLDhEQUFhQSxDQUFDSyxRQUFRO1lBQ2pDLE9BQU9GLElBQUlXLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQ3hCQyxPQUFPO1lBQ1g7UUFDSjtRQUVBLDREQUE0RDtRQUM1RCxNQUFNQyxXQUEwQlgsdUJBQXVCLEVBQUU7UUFDekRXLFNBQVNDLElBQUksQ0FBQztZQUFFQyxNQUFNO1lBQVFDLFNBQVNmO1FBQU07UUFFN0MsSUFBSTtZQUNBLE1BQU1nQixhQUFhLE1BQU10QixpRUFBZ0JBLENBQUNrQjtZQUMxQ1QsUUFBUUMsR0FBRyxDQUFDO1lBQ1pOLElBQUlXLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQ2pCTyxTQUFTO2dCQUNUQyxVQUFVRjtZQUNkO1FBQ0osRUFBRSxPQUFPTCxPQUFPO1lBQ1pSLFFBQVFRLEtBQUssQ0FBQyxpQkFBaUJBO1lBQy9CUixRQUFRUSxLQUFLLENBQUMsa0JBQWtCO2dCQUM1QlEsU0FBU1IsaUJBQWlCUyxRQUFRVCxNQUFNUSxPQUFPLEdBQUdFLE9BQU9WO2dCQUN6RFcsT0FBT1gsaUJBQWlCUyxRQUFRVCxNQUFNVyxLQUFLLEdBQUdDO2dCQUM5Q0MsTUFBTWIsaUJBQWlCUyxRQUFRVCxNQUFNYSxJQUFJLEdBQUc7WUFDaEQ7WUFFQSxzREFBc0Q7WUFDdEQsSUFBSUMsZUFBZTtZQUVuQixJQUFJZCxpQkFBaUJTLE9BQU87Z0JBQ3hCLElBQUlULE1BQU1RLE9BQU8sQ0FBQ08sUUFBUSxDQUFDLGlCQUFpQmYsTUFBTVEsT0FBTyxDQUFDTyxRQUFRLENBQUMsMkJBQTJCO29CQUMxRkQsZUFBZTtnQkFDbkIsT0FBTyxJQUFJZCxNQUFNUSxPQUFPLENBQUNPLFFBQVEsQ0FBQyxZQUFZO29CQUMxQ0QsZUFBZTtnQkFDbkIsT0FBTyxJQUFJZCxNQUFNUSxPQUFPLENBQUNPLFFBQVEsQ0FBQyxjQUFjZixNQUFNUSxPQUFPLENBQUNPLFFBQVEsQ0FBQyxVQUFVO29CQUM3RUQsZUFBZTtnQkFDbkI7WUFDSjtZQUVBM0IsSUFBSVcsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFDakJPLFNBQVM7Z0JBQ1ROLE9BQU9jO2dCQUNQRSxPQUFPaEIsaUJBQWlCUyxTQUFTVCxNQUFNUSxPQUFPLENBQUNPLFFBQVEsQ0FBQztZQUM1RDtRQUNKO0lBQ0osT0FBTztRQUNINUIsSUFBSThCLFNBQVMsQ0FBQyxTQUFTO1lBQUM7U0FBTztRQUMvQjlCLElBQUlXLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFDakJDLE9BQU8sQ0FBQyxPQUFPLEVBQUVkLElBQUlFLE1BQU0sQ0FBQyxZQUFZLENBQUM7UUFDN0M7SUFDSjtBQUNKO0FBRUEsaUVBQWVILE9BQU9BLEVBQUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbXVzdGFcXERlc2t0b3BcXG1lZGFpLWFwcFxcc3JjXFxwYWdlc1xcYXBpXFxhaS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0QXBpUmVxdWVzdCwgTmV4dEFwaVJlc3BvbnNlIH0gZnJvbSAnbmV4dCc7XHJcbmltcG9ydCB7IGdlbmVyYXRlUmVzcG9uc2UsIHZhbGlkYXRlSW5wdXQsIENoYXRNZXNzYWdlIH0gZnJvbSAnLi4vLi4vdXRpbHMvYWlIZWxwZXInO1xyXG5cclxuY29uc3QgaGFuZGxlciA9IGFzeW5jIChyZXE6IE5leHRBcGlSZXF1ZXN0LCByZXM6IE5leHRBcGlSZXNwb25zZSkgPT4ge1xyXG4gICAgaWYgKHJlcS5tZXRob2QgPT09ICdQT1NUJykge1xyXG4gICAgICAgIGNvbnN0IHsgaW5wdXQsIGNvbnZlcnNhdGlvbkhpc3RvcnkgfSA9IHJlcS5ib2R5O1xyXG5cclxuICAgICAgICAvLyBEZWJ1ZyBsb2dnaW5nXHJcbiAgICAgICAgY29uc29sZS5sb2coJ0FQSSBLZXkgYXZhaWxhYmxlOicsICEhcHJvY2Vzcy5lbnYuR0VNSU5JX0FQSV9LRVkpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdBUEkgS2V5IGxlbmd0aDonLCBwcm9jZXNzLmVudi5HRU1JTklfQVBJX0tFWT8ubGVuZ3RoIHx8IDApO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdJbnB1dCByZWNlaXZlZDonLCBpbnB1dCk7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ0NvbnZlcnNhdGlvbiBoaXN0b3J5IGxlbmd0aDonLCBjb252ZXJzYXRpb25IaXN0b3J5Py5sZW5ndGggfHwgMCk7XHJcblxyXG4gICAgICAgIC8vIFZhbGlkYXRlIGlucHV0XHJcbiAgICAgICAgaWYgKCFpbnB1dCB8fCAhdmFsaWRhdGVJbnB1dChpbnB1dCkpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgXHJcbiAgICAgICAgICAgICAgICBlcnJvcjogJ0ludmFsaWQgaW5wdXQuIFBsZWFzZSBwcm92aWRlIGEgdmFsaWQgcXVlc3Rpb24gKDEtMTAwMCBjaGFyYWN0ZXJzKS4nIFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIEJ1aWxkIGNvbnZlcnNhdGlvbiBoaXN0b3J5IGluY2x1ZGluZyB0aGUgbmV3IHVzZXIgbWVzc2FnZVxyXG4gICAgICAgIGNvbnN0IG1lc3NhZ2VzOiBDaGF0TWVzc2FnZVtdID0gY29udmVyc2F0aW9uSGlzdG9yeSB8fCBbXTtcclxuICAgICAgICBtZXNzYWdlcy5wdXNoKHsgcm9sZTogJ3VzZXInLCBjb250ZW50OiBpbnB1dCB9KTtcclxuXHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgYWlSZXNwb25zZSA9IGF3YWl0IGdlbmVyYXRlUmVzcG9uc2UobWVzc2FnZXMpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnQUkgUmVzcG9uc2UgZ2VuZXJhdGVkIHN1Y2Nlc3NmdWxseScpO1xyXG4gICAgICAgICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IFxyXG4gICAgICAgICAgICAgICAgc3VjY2VzczogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIHJlc3BvbnNlOiBhaVJlc3BvbnNlIFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdBSSBBUEkgZXJyb3I6JywgZXJyb3IpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBkZXRhaWxzOicsIHtcclxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogU3RyaW5nKGVycm9yKSxcclxuICAgICAgICAgICAgICAgIHN0YWNrOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3Iuc3RhY2sgOiB1bmRlZmluZWQsXHJcbiAgICAgICAgICAgICAgICBuYW1lOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubmFtZSA6ICdVbmtub3duJ1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIC8vIFByb3ZpZGUgc3BlY2lmaWMgZXJyb3IgbWVzc2FnZXMgYmFzZWQgb24gZXJyb3IgdHlwZVxyXG4gICAgICAgICAgICBsZXQgZXJyb3JNZXNzYWdlID0gJ1NvcnJ5LCBJIGVuY291bnRlcmVkIGFuIGVycm9yLiBQbGVhc2UgdHJ5IGFnYWluLic7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvcikge1xyXG4gICAgICAgICAgICAgICAgaWYgKGVycm9yLm1lc3NhZ2UuaW5jbHVkZXMoJ292ZXJsb2FkZWQnKSB8fCBlcnJvci5tZXNzYWdlLmluY2x1ZGVzKCd0ZW1wb3JhcmlseSBvdmVybG9hZGVkJykpIHtcclxuICAgICAgICAgICAgICAgICAgICBlcnJvck1lc3NhZ2UgPSAnSVxcJ20gZXhwZXJpZW5jaW5nIGhpZ2ggZGVtYW5kIHJpZ2h0IG5vdy4gUGxlYXNlIHdhaXQgYSBtb21lbnQgYW5kIHRyeSBhZ2Fpbi4nO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChlcnJvci5tZXNzYWdlLmluY2x1ZGVzKCdBUEkga2V5JykpIHtcclxuICAgICAgICAgICAgICAgICAgICBlcnJvck1lc3NhZ2UgPSAnVGhlcmVcXCdzIGFuIGlzc3VlIHdpdGggdGhlIEFJIHNlcnZpY2UgY29uZmlndXJhdGlvbi4gUGxlYXNlIGNvbnRhY3Qgc3VwcG9ydC4nO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmIChlcnJvci5tZXNzYWdlLmluY2x1ZGVzKCduZXR3b3JrJykgfHwgZXJyb3IubWVzc2FnZS5pbmNsdWRlcygnZmV0Y2gnKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGVycm9yTWVzc2FnZSA9ICdJXFwnbSBoYXZpbmcgdHJvdWJsZSBjb25uZWN0aW5nIHRvIHRoZSBBSSBzZXJ2aWNlLiBQbGVhc2UgY2hlY2sgeW91ciBpbnRlcm5ldCBjb25uZWN0aW9uIGFuZCB0cnkgYWdhaW4uJztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgcmVzLnN0YXR1cyg1MDApLmpzb24oeyBcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgZXJyb3I6IGVycm9yTWVzc2FnZSxcclxuICAgICAgICAgICAgICAgIHJldHJ5OiBlcnJvciBpbnN0YW5jZW9mIEVycm9yICYmIGVycm9yLm1lc3NhZ2UuaW5jbHVkZXMoJ292ZXJsb2FkZWQnKVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJlcy5zZXRIZWFkZXIoJ0FsbG93JywgWydQT1NUJ10pO1xyXG4gICAgICAgIHJlcy5zdGF0dXMoNDA1KS5qc29uKHsgXHJcbiAgICAgICAgICAgIGVycm9yOiBgTWV0aG9kICR7cmVxLm1ldGhvZH0gTm90IEFsbG93ZWRgIFxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgaGFuZGxlcjsiXSwibmFtZXMiOlsiZ2VuZXJhdGVSZXNwb25zZSIsInZhbGlkYXRlSW5wdXQiLCJoYW5kbGVyIiwicmVxIiwicmVzIiwibWV0aG9kIiwiaW5wdXQiLCJjb252ZXJzYXRpb25IaXN0b3J5IiwiYm9keSIsImNvbnNvbGUiLCJsb2ciLCJwcm9jZXNzIiwiZW52IiwiR0VNSU5JX0FQSV9LRVkiLCJsZW5ndGgiLCJzdGF0dXMiLCJqc29uIiwiZXJyb3IiLCJtZXNzYWdlcyIsInB1c2giLCJyb2xlIiwiY29udGVudCIsImFpUmVzcG9uc2UiLCJzdWNjZXNzIiwicmVzcG9uc2UiLCJtZXNzYWdlIiwiRXJyb3IiLCJTdHJpbmciLCJzdGFjayIsInVuZGVmaW5lZCIsIm5hbWUiLCJlcnJvck1lc3NhZ2UiLCJpbmNsdWRlcyIsInJldHJ5Iiwic2V0SGVhZGVyIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./src/pages/api/ai.ts\n");

/***/ }),

/***/ "(api-node)/./src/utils/aiHelper.ts":
/*!*******************************!*\
  !*** ./src/utils/aiHelper.ts ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateResponse: () => (/* binding */ generateResponse),\n/* harmony export */   validateInput: () => (/* binding */ validateInput)\n/* harmony export */ });\n/* harmony import */ var _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @google/generative-ai */ \"@google/generative-ai\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_google_generative_ai__WEBPACK_IMPORTED_MODULE_0__]);\n_google_generative_ai__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n// Initialize the Gemini AI with your API key\nconst genAI = new _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__.GoogleGenerativeAI(\"AIzaSyD1I3tbuIVdv20h7IMmU8JWA7-YR0Ce1xs\" || 0);\n// Sleep function for retry logic\nconst sleep = (ms)=>new Promise((resolve)=>setTimeout(resolve, ms));\nconst generateResponse = async (conversationHistory)=>{\n    const maxRetries = 3;\n    const baseDelay = 1000; // 1 second\n    for(let attempt = 1; attempt <= maxRetries; attempt++){\n        try {\n            console.log(`Starting AI response generation (attempt ${attempt}/${maxRetries})...`);\n            console.log('API Key present:', !!\"AIzaSyD1I3tbuIVdv20h7IMmU8JWA7-YR0Ce1xs\");\n            console.log('Conversation history length:', conversationHistory.length);\n            // Get the generative model with optimized settings\n            const model = genAI.getGenerativeModel({\n                model: 'gemini-1.5-flash',\n                generationConfig: {\n                    temperature: 0.7,\n                    topK: 40,\n                    topP: 0.95,\n                    maxOutputTokens: 1000\n                }\n            });\n            console.log('Model created successfully');\n            // Build conversation context with recent history (last 10 messages to avoid token limits)\n            const recentHistory = conversationHistory.slice(-10);\n            // Create a prompt with conversation context\n            let conversationText = '';\n            recentHistory.forEach((msg)=>{\n                if (msg.role === 'user') {\n                    conversationText += `Student: ${msg.content}\\n`;\n                } else {\n                    conversationText += `MedAI: ${msg.content}\\n`;\n                }\n            });\n            const prompt = `You are MedAI, a medical education AI assistant. Maintain conversation context and give concise, accurate answers.\n\nPrevious conversation:\n${conversationText}\n\nPlease respond as MedAI to continue this medical education conversation:`;\n            console.log('Calling generateContent...');\n            const result = await model.generateContent(prompt);\n            console.log('generateContent completed');\n            const response = await result.response;\n            console.log('Response extracted');\n            const text = response.text();\n            console.log('Text extracted, length:', text.length);\n            return text;\n        } catch (error) {\n            console.error(`Error on attempt ${attempt}:`, error);\n            console.error('Error type:', error?.constructor?.name);\n            console.error('Error message:', error instanceof Error ? error.message : String(error));\n            // Check if this is a retryable error (503 Service Unavailable)\n            const isRetryable = error?.message?.includes('503') || error?.message?.includes('Service Unavailable') || error?.message?.includes('overloaded');\n            if (isRetryable && attempt < maxRetries) {\n                const delay = baseDelay * Math.pow(2, attempt - 1); // Exponential backoff\n                console.log(`Retrying in ${delay}ms...`);\n                await sleep(delay);\n                continue;\n            }\n            // If not retryable or max retries reached, throw error\n            if (isRetryable) {\n                throw new Error('The AI service is temporarily overloaded. Please wait a moment and try again.');\n            } else {\n                throw new Error('Failed to generate AI response. Please try again.');\n            }\n        }\n    }\n    throw new Error('Failed to generate response after multiple attempts.');\n};\nconst validateInput = (input)=>{\n    // Basic validation for user input\n    return input.trim().length > 0 && input.trim().length <= 1000; // Add max length\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./src/utils/aiHelper.ts\n");

/***/ }),

/***/ "@google/generative-ai":
/*!****************************************!*\
  !*** external "@google/generative-ai" ***!
  \****************************************/
/***/ ((module) => {

module.exports = import("@google/generative-ai");;

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fai&preferredRegion=&absolutePagePath=.%2Fsrc%5Cpages%5Capi%5Cai.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();